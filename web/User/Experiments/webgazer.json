{"all_procs": {"procedure_1.csv": [["Item", "Trial Type", "Max Time", "Text", "Shuffle 1", ""], ["0", "instruct", "user", "If you have been drinking alcohol, taking recreational drugs or gambled within the last 24 hours, please wait until it's been 24 hours since you last partook in any of these activities before proceeding. Don't worry about restarting the experiment, you can close the window and resume from here or restart from scratch when you're ready.", "off", ""], ["2", "webgazer", "user", "Please look at the cross.<br />A pair of images will follow. You are free <br />to look at either image.<br /><br />Do not move your head, <br />only use your eyes.", "trials", ""], ["0", "instruct", "user", "https://forms.office.com/Pages/ResponsePage.aspx?id=xDv6T_zswEiQgPXkP_kOX4iwBGRO5-NFl2OBto3gpIBUQzlWSUtMT1cyNFJXQVUyM0VVQ1pBWU0zWS4u", "off", ""], ["0", "instruct", "user", "we're no longer including Rutgers alcohol problem index, right?", "off", ""], ["0", "instruct", "user", "are we including gambling problem index?", "off", ""], ["0", "instruct", "user", "IUC will be done with microsoft forms, right?", "off", ""], ["0", "instruct", "user", "demographics will be done with microsoft forms, right?", "off", ""], ["", "", "", "", "", ""]]}, "cond_array": [["Name", "Notes", "Stimuli", "Procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", ""], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "random", "", "", "5", ""], ["", "", "", "", "", "", "", "", "", "", ""]], "all_stims": {"stimuli_1.csv": [["calibrations", "freeview_image_file", "design_type", "calibration_skip", "image_height", "image_width", "save_script", "stim_duration", "trials", "left_side", "trial_order", "left_position", "right_position", "min_width", "min_height", "skip_instruct", null], ["13", "freeviewing/freeview_stimuli.csv", "freeview", "skip", "300px", "400px", "https://script.google.com/macros/s/AKfycbzwj1yzprDALwIAP0LFwFD-LeBEb3e9w28YVKj4veWavrjsu55n/exec", "2000", "20", "image_2", "random", "-231px", "231px", "1000px", "600px", "on", null], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null]]}, "procedure": null, "stimuli": null, "public_key": "Nv6bG32vbJSAq5iB/NuiuXWb+tcFCdmY97pnXvfzcB0=", "save_script": "https://script.google.com/macros/s/AKfycbzwj1yzprDALwIAP0LFwFD-LeBEb3e9w28YVKj4veWavrjsu55n/exec", "parsed_procs": {"procedure_1.csv": [{"": "", "item": "0", "trial type": "instruct", "max time": "user", "text": "If you have been drinking alcohol, taking recreational drugs or gambled within the last 24 hours, please wait until it's been 24 hours since you last partook in any of these activities before proceeding. Don't worry about restarting the experiment, you can close the window and resume from here or restart from scratch when you're ready.", "shuffle 1": "off"}, {"": "", "item": "2", "trial type": "webgazer", "max time": "user", "text": "Please look at the cross.<br />A pair of images will follow. You are free <br />to look at either image.<br /><br />Do not move your head, <br />only use your eyes.", "shuffle 1": "trials"}, {"": "", "item": "0", "trial type": "instruct", "max time": "user", "text": "https://forms.office.com/Pages/ResponsePage.aspx?id=xDv6T_zswEiQgPXkP_kOX4iwBGRO5-NFl2OBto3gpIBUQzlWSUtMT1cyNFJXQVUyM0VVQ1pBWU0zWS4u", "shuffle 1": "off"}, {"": "", "item": "0", "trial type": "instruct", "max time": "user", "text": "we're no longer including Rutgers alcohol problem index, right?", "shuffle 1": "off"}, {"": "", "item": "0", "trial type": "instruct", "max time": "user", "text": "are we including gambling problem index?", "shuffle 1": "off"}, {"": "", "item": "0", "trial type": "instruct", "max time": "user", "text": "IUC will be done with microsoft forms, right?", "shuffle 1": "off"}, {"": "", "item": "0", "trial type": "instruct", "max time": "user", "text": "demographics will be done with microsoft forms, right?", "shuffle 1": "off"}]}, "surveys": {}, "trialtypes": {"instruct": "<!--\r\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\r\n    A program for running experiments on the web\r\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\r\n\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License version 3 as published by\r\n    the Free Software Foundation.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n \t\t\r\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\r\n*/\r\n-->\r\n<style>\r\n#instruct_text{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n#proceed_button{\r\n  position:absolute;\r\n  right: 20px;\r\n}\r\n#trial_contents{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:600;\r\n  height:600;\r\n}\r\n</style>\r\n<div id=\"trial_contents\">\r\n  <div id=\"instruct_text\">{{text}}</div>\r\n  <div>\r\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\r\n  </div>\r\n</div>", "webgazer": "<!--\n    This is based on code from OSF repository https://osf.io/jmz79/ that accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017.\n    \n    Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a freeviewing task that works on Collector\n-->\n\n<!DOCTYPE html>\n<html>\n<head>\n    <link href=\"../libraries/webgazer/css/jquery-ui.css\" type=\"text/css\" rel=\"stylesheet\">\n    <link href=\"../libraries/webgazer/css/jquery.mobile-1.4.5.css\" type=\"text/css\" rel=\"stylesheet\">\n    <link href=\"../libraries/webgazer/css/tolcam.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"../libraries/webgazer/js/jquery-1.12.3.min.js\"></script>\n    <script src=\"../libraries/webgazer/js/jquery-ui.js\"></script>\n    <script src=\"../libraries/webgazer/js/jquery.mobile-1.4.2.min.js\"></script>\n    <!--\n    <scr  ipt src=\"../libraries/webgazer/js/tolcam.js\"></scr  ipt>\n    -->\n    <script src=\"../libraries/webgazer/js/simpleheat.js\"></script>\n</head>\n<style>\n.stimuli_img{\n  width: {{image_width}};\n  object-fit: fill;\n  vertical-align: middle;\n  height: {{image_height}};\n  position: absolute;\n  transform: translate(-50%, 0);\n  left: 50%;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n#stimuli_fixation{\n  \n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -moz-transform: translateX(-50%) translateY(-50%);\n  -webkit-transform: translateX(-50%) translateY(-50%);\n  transform: translateX(-50%) translateY(-50%);\n  font-size:100px;\n  text-align:center;\n  height:150px;\n\n  /*\n  transform: translate(-50%, 0);\n  left: 50%;\n  font-size:100px;\n  vertical-align: middle;\n  /*  \n  left: 50%;\n  object-fit: fill;\n  position: absolute;\n  */\n}\n#stimuli_img_left{\n  margin-left: {{left_position}};\n}\n#stimuli_img_right{\n  /* left:  75%; */\n  margin-left: {{right_position}};\n}\n</style>\n<body>\n  <div id=\"instruction\">\n      <div id=\"instruction_1\" class=\"instruction_page\">\n        This experiment is based on code from the OSF repository <a href=\"https://osf.io/jmz79/\" target=\"_blank\">https://osf.io/jmz79/</a> which accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017. Please find the abstract and information about the code, analyses, and data below. This work is intended for scientific use only.\n  Written by Kilian Semmelmann, tolcam@ksemmelm.de, 2017. <br><br>\n  \n  Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a task that works on Collector.\n      </div>\n\n      <div id=\"instruction_2\" class=\"instruction_page\">\n          <h1>Webcam Setup</h1>\n          <br />\n          <div id=\"setup_after\">\n              You can take a short break and move your head. Before continuing, please follow the instructions noted below.<br />\n          </div>\n          <br />\n          Please turn off your mobile phone and close all other programs and websites. Then carefully read and follow these instructions:<br />\n          <img src=\"../libraries/webgazer/imgs/instructions_donttilt.png\" style = \"width: 100%; margin-top: 20px; margin-bottom: 20px;\"/>\n          <br />\n          <span id=\"webcam_insert\"></span>\n          <br />\n          <button class=\"btn btn-primary\" id=\"flip_cam_btn\" style=\"display:none\">Flip cam</button>\n          <div id=\"setup_first\">\n              This study consists of multiple five-minute parts with pauses inbetween. After you clicked \"start\", please avoid moving your head. If you move too much, the calibration can fail and you might not be able to finish the study.\n          </div>\n          <br />\n      </div>\n\n      <div id=\"instruction_3\" class=\"instruction_page\">\n        <div id=\"beforetherest\">\n          <h1>Proceed</h1>\n          <br />\n          Click \"Proceed\" to move onto the next trial\n          <button onclick=\"Trial.submit()\" class=\"btn\">Proceed</button>\n        </div>\n      </div>\n\n      <div id=\"instruction_back\" class=\"instruction_navigation\">\n        <div id=\"instruction_back_text\">\n          &lt;\n        </div>\n      </div>\n      <div id=\"instruction_continue\" class=\"instruction_navigation\">\n        <div id=\"instruction_continue_text\">\n          &gt;\n        </div>\n      </div>\n  </div>\n\n  <div id=\"calibration_dot\" class=\"stimuli\"><div id=\"calibration_cnt\">0</div></div>\n  <div id=\"stimulus\" class=\"stimuli\"><img src=\"../libraries/webgazer/imgs/talking.jpg\" /></div>\n  <div id=\"stimuli_dot\" class=\"stimuli\"></div>\n  <div id=\"stimuli_bar\" class=\"stimuli\"></div>\n  <div id=\"stimuli_fixation\" class=\"stimuli\">+</div>\n  <div id=\"stimuli_prime\" class=\"stimuli\"></div>\n  <div id=\"stimuli_target\" class=\"stimuli\">X</div>\n  <img id=\"stimuli_img_left\" class=\"stimuli stimuli_img\"/>\n  <img id=\"stimuli_img_right\" class=\"stimuli stimuli_img\"/>\n  <div id=\"instruction_message\"></div>\n\n  <div id=\"message\">\n      no message\n  </div>\n</body>\n</html>\n<script>\n\n//////////////////////\n// Borcsok variables\n//////////////////////\n\nvar image_pair;\nTrial.set_timer(function(){\n  function refuse_height(){\n    bootbox.confirm(\"Your window height needs to be at least {{min_height}} before starting. Please make your window as big as possible before proceeding.\", function(result){\n      if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\n        refuse_height();\n      }\n    });\n  };\n  function refuse_width(){\n    bootbox.confirm(\"Your window width needs to be at least {{min_width}} before starting. Please make your window as big as possible before proceeding.\", function(result){\n      if(window.innerWidth < parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\n        refuse_width();\n      }\n    });\n  }\n  if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\n    refuse_height();\n  }\n  if(window.innerWidth <  parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\n    refuse_width();\n  }\n},0);\n\n\n//////////////////////\n// default settings //\n//////////////////////\n\nvar calibrations = \"{{calibrations}}\";\nvar freeview_image_file = \"{{freeview_image_file}}\".toLowerCase();\nvar design_type = \"{{design_type}}\";\nvar calibration_skip = \"{{calibration_skip}}\";\nvar image_height = \"{{image_height}}\";\nvar image_width = \"{{image_width}}\";\nvar left_side = \"{{left_side}}\";\nvar save_script = \"{{save_script}}\";\nvar stim_duration = \"{{stim_duration}}\";\nvar trials = \"{{trials}}\";\nvar trial_order = \"{{trial_order}}\";\n\n\nif(freeview_image_file.toLowerCase().indexOf(\"https://\") == -1){                //i.e. isn't stored on dropbox or some other remote location\n  freeview_image_file = \"../User/\" + freeview_image_file;\n}\n\n\n\nif(calibrations.indexOf(\"calibrations\") !== -1){\n  calibrations = 13;\n}\nif(calibration_skip.indexOf(\"calibration_skip\") !== -1){\n  calibration_skip = \"no\";\n}\nif(stim_duration.indexOf(\"stim_duration\") !== -1){\n  stim_duration = 2000;\n}\nif(left_side.indexOf(\"left_side\") !== -1){\n  left_side = \"counterbalance\";  \n}\n\n\n\n\n/************************************\n * HELPER FUNCTIONS\n ************************************/\n/**\n * Shuffles array in place.\n * @param {Array} a items The array containing the items.\n * @author http://stackoverflow.com/a/2450976/4175553\n */\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\n/************************************\n * WEBCAM PARAMETERS\n ************************************/\nvar cam = {};\ncam.overlay = '';\ncam.width = 400;\ncam.height = 300;\ncam.topDist = '0px';\ncam.leftDist = '0px';\ncam.recording = 0;\ncam.validating = 0;\ncam.calibrating = 0;\ncam.initialized = 0;\n\n/************************************\n * CALIBRATION PARAMETERS\n ************************************/\nvar calibrating = 0;\nvar t_calibration_start;\nvar calibration_no = 0;\nvar calibration = {};\ncalibration.points = [];\ncalibration.method = \"watch\"; // click or watch\ncalibration.calibrations = calibrations // how many calibration dots\ncalibration.duration = 20; // how often does one position get sampled\ncalibration.instruction = 'Please fixate on the dot <br />that will appear. <br /><br />Do not move your head,<br />only use your eyes.';\nif(\"{{skip_instruct}}\" == \"on\"){\n  calibration.instruction_duration = 0;\n} else {\n  calibration.instruction_duration = 5000;\n}\n\n/************************************\n * VALIDATION PARAMETERS\n ************************************/\nvar validating = 0;\nvar validation_no = 0;\nvar validation_current = {\"x\": 0, \"y\": 0};\nvar validation_attempt = 1;\nvar validation = {};\nvalidation.validations = 5;\nvalidation.duration = 20;\nvalidation.points = [];\nvalidation.timeout = 20000; // if no validation happens within X ms, validation will be ended and re-calibrated\nvalidation.attempts = 5; // how often can validation be failed PER validation\nvalidation.distance = 200; // offset distance in pixel to be a valid validation sample\n\n\n/************************************\n * DESIGN\n ************************************/\nvar design = {};\nvar block_no = 0;\nvar trial_no = 0;\n\neyetrack_designs = {\n  freeview:   {'type': 'freeview', 'trials': trials, 'iti': 500, 'instruction': '{{text}}', 'instruction_duration': 5000},\n  simple: {'type': 'simple', 'trials': 24, 'iti': 500, 'instruction': 'Please look at the cross.<br />When the dot appears, please look at it.<br /><br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 5000},\n  pursuit: {'type': 'pursuit', 'trials': 24, 'iti': 500, 'instruction': 'A black dot will appear. Please <br />look at it. When it turns <span style=\"color: #dd494b;\">red</span>,<br /> Please follow its movement with your eyes.<br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 7000},\n  \n}\n\nif(\"{{skip_instruct}}\" == \"on\"){\n  eyetrack_designs.freeview.instruction_duration = 0;\n} \n\n\ndesign.blocks = [\n  eyetrack_designs[[\"{{design_type}}\"]]\n];\n\n//design.blocks = shuffle(design.blocks);\ndesign.blocks_randomized = 1; // shall the blocks be shuffled?\ndesign.trials_randomized = 1; // same for trials\ndesign.calibrate = \"high\";\ndesign.recalibrate = 1;\n\n\n\n/************************************\n * DATA VARIABLES\n ************************************/\nvar data = [];\nvar data_current = {};\nvar status = '-';\n\n/**\ndata.design = jQuery.extend(true, {}, design);\n **/\n\n/************************************\n * SET UP WEBGAZER\n ************************************/\nfunction loadWebgazer() {\n  $('canvas').remove();\n  cam.initialized = 0;\n  $.getScript( \"../libraries/webgazer/js/webgazer_old.js\" )\n    .done(function( script, textStatus ) {\n      initializeWebgazer();\n      $('#message').html('Please allow for access on your Webcam on the top part of the screen. <br /><br />Remember: We will NOT transmit your video, but only process it locally and transmit numbers to our server.').show();\n    })\n    .fail(function( jqxhr, settings, exception ) {\n      $( \"div.log\" ).text( \"Triggered ajaxError handler.\" );\n    });\n}\n\n\nfunction initializeWebgazer() {\n    \n  //webgazer.clearData()\n  webgazer.setRegression('ridge') /* currently must set regression and tracker */\n    .setTracker('clmtrackr')\n    .setGazeListener(function(d, clock) {\n      //console.log(data); /* data is an object containing an x and y key which are the x and y prediction coordinates (no bounds limiting) */\n      //console.log(clock); /* elapsed time in milliseconds since webgazer.begin() was called */\n      if (d !== null) {\n\n        if (cam.calibrating == 1) {\n            var $cd = $('#calibration_dot');\n            var cx = parseInt(Math.round($cd.offset().left));\n            var cy = parseInt(Math.round($cd.offset().top));\n            var cp = d;\n            var dist = Math.sqrt(((cp.x - cx) * (cp.x - cx)) + ((cp.y - cy) * (cp.y - cy)));\n            var c = $('#calibration_cnt').html();\n            data_current.raw.push({'time': clock, 'x': cp.x, 'y': cp.y, 'cx': cx, 'cy': cy, 'dist': dist, 'c': c});\n        }\n\n\n        if (cam.validating == 1) {\n            // see whether dx and dy are within 100px radius of target\n            var dist = parseInt(Math.sqrt(((d.x - validation_current.x) * (d.x - validation_current.x)) + ((d.y - validation_current.y) * (d.y - validation_current.y))));\n            var c = parseInt($('#calibration_cnt').html());\n            if (dist < validation.distance) {\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 1});\n                if (c < calibration.duration) {\n                    $('#calibration_cnt').html(++c);\n                } else {\n                    cam.validating = 0;\n                    clearTimeout(t);\n                    $('#calibration_dot').hide();\n                    validation_no++;\n                    saveData();\n                    setTimeout(\"validate();\", 500);\n                }\n            } else {\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 0});\n            }\n        }\n\n        if (cam.recording == 1) {\n            var tx = -1;\n            var ty = -1;\n            if (data_current.task == \"simple\" || data_current.task == \"pursuit\") {\n                var $sd = $('#stimuli_dot');\n                var tx = parseInt(Math.round($sd.offset().left));\n                var ty = parseInt(Math.round($sd.offset().top));\n            }\n            data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'tx': tx, 'ty': ty, 'status': status});\n            //console.log(data.trials[trial_no].raw.length + ' ' + d.x + ' ' + d.y);\n        }\n      }\n    })\n    .begin()\n    .showPredictionPoints(false); /* shows a square every 100 milliseconds where current prediction is */\n\n  cl = webgazer.getTracker().clm;\n\n  checkWebgazer();\n}\n\n\nfunction checkWebgazer() {\n  if (webgazer.isReady()) {\n    console.log('webgazer is ready.');\n    initializeCam();\n  } else {\n    setTimeout(checkWebgazer, 100);\n  }\n}\n\n/************************************\n * SET UP WEBCAM\n ************************************/\nfunction initializeCam() {\n  var video = document.getElementById('webgazerVideoFeed');\n  video.style.display = 'block'; // block\n  video.style.position = 'relative';\n  video.width = cam.width;\n  video.height = cam.height;\n  video.style.margin = '0px';\n  $('#webgazerVideoFeed').css({\n    'left': '50%',\n    'transform': 'translate(-50%, 0)',\n    'margin': '20px'\n  }).detach().insertAfter('#webcam_insert').get(0).play();\n  flipped = false;\n  $(\"#flip_cam_btn\").show();\n  $(\"#flip_cam_btn\").on(\"click\",function(){\n    if(flipped == false){\n      flipped = true;\n      $(\"#webgazerVideoFeed\").css(\"transform\",\"scaleX(-1)\");\n      $(\"#webgazerVideoFeed\").css(\"-webkit-transform\", \"scaleX(-1)\");\n    } else {\n      flipped = false;\n      $(\"#webgazerVideoFeed\").css(\"transform\",\"scaleX(1)\");\n      $(\"#webgazerVideoFeed\").css(\"-webkit-transform\", \"scaleX(1)\");\n    }\n  });\n\n  webgazer.params.imgWidth = cam.width;\n  webgazer.params.imgHeight = cam.height;\n\n  cam.overlay = document.getElementById('overlay');\n  if (cam.overlay === null) {\n      cam.overlay = document.createElement('canvas');\n      cam.overlay.id = 'overlay';\n      document.body.appendChild(cam.overlay);\n  }\n  cam.overlay.style.position = 'absolute';\n  cam.overlay.width = cam.width;\n  cam.overlay.height = cam.height;\n  cam.overlay.style.top = cam.topDist;\n  cam.overlay.style.left = cam.leftDist;\n  cam.overlay.style.margin = '0px';\n\n  cam.initialized = 1;\n\n  $('#message').html('Webcam access successful.').delay(1000).fadeOut(1000);\n}\n\n/************************************\n * START BLOCKS\n ************************************/\nfunction prepareBlock() {\n  if (cam.initialized == 1) {\n    if (block_no < design.blocks.length) {\n      trial_no = 0;\n\n      webgazer.resume();\n      if (design.recalibrate == 1 || block_no == 0) {\n        $('#instruction_message').html(calibration.instruction).show();\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", calibration.instruction_duration);\n        setTimeout(\"startCalibration();\", design.blocks[block_no].instruction_duration + 2000);\n      } else {\n        $('#instruction_message').html(design.blocks[block_no].instruction).show();\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\n        setTimeout(\"prepareTrial();\", design.blocks[block_no].instruction_duration + 2000);\n      }\n    } else {\n      endExperiment();\n    }\n  } else {\n    setTimeout(\"prepareBlock();\", 500);\n  }\n}\n\n\n/************************************\n * CALIBRATE\n ************************************/\nfunction startCalibration() {\n  if(calibration_skip == \"skip\" || \n     calibration_skip == \"on\" ||\n     calibration_skip == \"true\"){\n    endValidation()\n  } else {\n    $('.stimuli').hide();\n    $('#calibration_dot').hide();\n    if (block_no == 0) {\n        $('#calibration_dot').click(function() {\n            calibrateHit();\n        });\n    }\n    calibration_no = 0;\n    //webgazer.clearData();\n    window.localStorage.clear();\n    //webgazer.begin();\n    t_calibration_start = new Date().getTime();\n    calibrate();\n  }\n}\n\nfunction calibrate() {\n    clearTimeout(t);\n    if (calibration_no < calibration.calibrations) {\n        $('#calibration_cnt').html(calibration.duration);\n        $c = $('#calibration_dot');\n        //var c = Math.floor(Math.random() * calibration.points.length);\n        //var p = calibration.points.splice(c, 1)[0];\n        if (calibration.points.length == 0) {\n            calibration.points = shuffle([\n                {x: \"20%\", y: \"20%\"},\n                {x: \"50%\", y: \"20%\"},\n                {x: \"80%\", y: \"20%\"},\n                {x: \"20%\", y: \"50%\"},\n                {x: \"50%\", y: \"50%\"},\n                {x: \"80%\", y: \"50%\"},\n                {x: \"20%\", y: \"80%\"},\n                {x: \"50%\", y: \"80%\"},\n                {x: \"80%\", y: \"80%\"},\n                {x: \"35%\", y: \"35%\"},\n                {x: \"65%\", y: \"35%\"},\n                {x: \"35%\", y: \"65%\"},\n                {x: \"65%\", y: \"65%\"}\n            ]);\n        }\n        var p = calibration.points.pop();\n        $c.css({\n            'left' : p.x,\n            'top' : p.y\n        });\n\n        data_current = {\n            'type': 'calibration',\n            'block': block_no,\n            'trial': calibration_no,\n            'x': p.x,\n            'y': p.y,\n            'raw': []\n        };\n\n        cam.calibrating = 1;\n        $c.show();\n        if (calibration.method == 'watch') {\n            t = setTimeout(\"autoCalibration();\", 750);\n        }\n    } else {\n        endCalibration();\n    }\n}\n\nfunction calibrateHit() {\n    var c = $('#calibration_cnt').html();\n    /*\n    if ($('#webgazerVideoFeed').css('display') == 'block') {\n        $('#webgazerVideoFeed').css({\n            top: cam.topDist,\n            left: cam.leftDist,\n            display: 'none',\n            transform: '0'\n        });\n    }*/\n    if (c > 1 && cam.calibrating == 1) {\n        $('#calibration_cnt').html(--c);\n        if (calibration.method == \"watch\") {\n            t = setTimeout(\"autoCalibration();\", 100);\n            //requestAnimationFrame(autoCalibration);\n        }\n    } else {\n        $('#calibration_cnt').html(9999);\n        clearTimeout(t);\n        cam.calibrating = 0;\n        $('#calibration_dot').hide();\n        calibration_no++;\n        saveData();\n        calibrate();\n    }\n    return false;\n}\n\nvar t;\nfunction autoCalibration() {\n    calibrateLog();\n    if (cam.calibrating == 1) {\n        calibrateHit();\n    }\n}\n\nfunction calibrateLog() {\n    var $cd = $('#calibration_dot');\n    var cx = parseInt(Math.round($cd.offset().left));\n    var cy = parseInt(Math.round($cd.offset().top));\n    webgazer.watchListener(cx, cy);\n}\n\n\nfunction endCalibration() {\n    clearTimeout(t);\n    $('#calibration_dot').unbind(\"click\");\n    startValidation();\n}\n\n\n\n/************************************\n * VALIDATE\n ************************************/\nfunction startValidation() {\n    validation_no = 0;\n    validate();\n}\n\nfunction validate() {\n    clearTimeout(t);\n    if (validation_no < validation.validations) { // if we there are validations left\n        $('#calibration_cnt').html(0);\n        var $c = $('#calibration_dot');\n        if (validation.points.length == 0) {\n            validation.points = shuffle([\n                {x: \"20%\", y: \"20%\"},\n                {x: \"80%\", y: \"20%\"},\n                {x: \"50%\", y: \"50%\"},\n                {x: \"20%\", y: \"80%\"},\n                {x: \"80%\", y: \"80%\"}\n                                        ]);\n        }\n        var vp = validation.points.pop();\n        $c.css({\n            'left' : vp.x,\n            'top' : vp.y\n        });\n        $c.show();\n        validation_current.x = Math.round($c.offset().left);\n        validation_current.y = Math.round($c.offset().top);\n\n        data_current = {\n            'type': 'validation',\n            'block': block_no,\n            'trial': validation_no,\n            'x': validation_current.x,\n            'y': validation_current.y,\n            'raw': []\n        };\n        cam.validating = 1;\n        t = setTimeout(\"validateFail();\", validation.timeout);\n//t = setTimeout('validation = 0;', 3000);\n    } else {\n        endValidation();\n    }\n}\n\nfunction validateFail() {\n    data_current.type = 'validationfail';\n    data_current.attempt = validation_attempt;\n    saveData();\n\n\n    cam.validating = 0;\n    webgazer.pause();\n\n    $('.stimuli').hide();\n    if (validation_attempt >= validation.attempts) {\n        $('#message').html('Unforuntately, the calibration failed too many times. Therefore, you can not participate in this study. Please contact <a href=\"mailto:kilian.semmelmann@rub.de\">kilian.semmelmann@rub.de</a> if you have any questions. Thanks for your interest.').show();\n    } else {\n        validation_attempt++;\n        $('#message').html('The calibration failed. <br />Please follow the instructions and try again (try ' + (validation_attempt) + ' of ' + validation.attempts + ').').show().delay(5000).fadeOut(1000);\n        $('#instruction').show();\n    }\n    // TOOD: log validation-fail\n}\n\nfunction endValidation() {\n    cam.validating = 0\n    validation_attempt = 1;\n    webgazer.pause();\n    $('#instruction_message').html(design.blocks[block_no].instruction).show();\n    setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\n    setTimeout(\"prepareTrial();\", design.blocks[block_no].instruction_duration + 2000);\n}\n\n\n\n/************************************\n * START EXPERIMENT\n ************************************/\nvar t_trial_start;\nfunction prepareTrial() {\n    status = \"prepare\";\n    $('.stimuli').hide();\n    data_current = {\n        'type': 'trial',\n        'block': block_no,\n        'trial': trial_no,\n        'raw': []\n    };\n    webgazer.resume();\n    startTrial();\n}\n\n\nfunction startTrial() {\n    t_trial_start = new Date().getTime();\n    $('#stimuli_fixation').show();\n    status = \"fixation_onset\";\n    // use start function of block-type name\n    var fn = design.blocks[block_no].type+\"Start\";\n    window[fn]();\n}\n\n\nvar heat;\nfunction endTrial() {\n    clearTimeout(t);\n    cam.recording = 0;\n    webgazer.pause();\n    status = \"end\";\n    $('.stimuli').hide();\n    trial_no++;\n    saveData();\n\n    if (trial_no < design.blocks[block_no].trials) {\n        setTimeout(\"prepareTrial();\", design.blocks[block_no].iti);\n    } else {\n        block_no++;\n        if (block_no < design.blocks.length) {\n            window.localStorage.clear();\n            webgazer.clearData();\n            //loadWebgazer();\n            //prepareBlock();\n            navigation('pause');\n        } else {\n            endExperiment();\n        }\n    }\n}\n\n\nfunction saveData() {\n  \n  data_current.raw = data_current.raw.map(function(row){\n    row.x = row.x - screen.width/2;\n    row.y = row.y - screen.height/2;\n    \n    if(typeof(image_pair) !== \"undefined\"){\n      Object.keys(image_pair).forEach(function(key){\n        row[key] = image_pair[key];\n      });\n    }\n    row.screen_width  = screen.width;\n    row.screen_height = screen.height;\n    //row.left_image  = image_pair.image_1;\n    //row.right_image = image_pair.image_2;\n    \n    return row;\n  });\n  \n  data.push(data_current);\n  data_current = {};\n  sendData();\n}\n\nfunction sendData() {\n  switch(parent.parent.dev_obj.context){\n    case \"localhost\":\n      data.forEach(function(trial,trial_no){\n        if (trial !== null){\n          parent.parent.eel.save_data(parent.parent.Study.get_vars.location,\n                        parent.parent.$(\"#participant_code\").val(),\n                        \"freeviewing-\" + trial_no,\n                        Papa.unparse(data[trial_no].raw))\n           parent.parent.online_save(parent.parent.Study.get_vars.location,\n                    parent.parent.$(\"#participant_code\").val() + \"-trial-\" + trial_no,\n                    parent.parent.$(\"#completion_code\").val(),\n                    parent.parent.$(\"#prehashed_code\").val(),  \n                    Papa.unparse(data[trial_no].raw),          //the data\n          \"{{save_script}}\".split(\"|\"),\n          function(){\n            parent.parent.online_data_obj.saves_ended ++;\n          });\n          data[trial_no] = null;\n        }\n      });\n      break;\n    case \"github\":\n      data.forEach(function(trial,trial_no){\n        if (trial !== null){\n                   parent.parent.online_save(parent.parent.Study.get_vars.location,\n                    parent.parent.$(\"#participant_code\").val() + \"-trial-\" + trial_no,\n                    parent.parent.$(\"#completion_code\").val(),\n                    parent.parent.$(\"#prehashed_code\").val(),  \n                    Papa.unparse(data[trial_no].raw),          //the data\n          parent.parent.exp_json.save_script,\n          function(){\n            parent.parent.online_data_obj.saves_ended ++;\n          });\n          data[trial_no] = null;\n        }\n      });\n      break;\n  }\n}\n\n\nfunction endExperiment() {\n  Trial.submit();\n}\n\n\n/************************************\n * SIMPLE DOT VIEWING PARADIGM\n * If you want to introduce your own paradigms, follow the same structure and extend the design array above.\n ************************************/\nvar tSimple = {};\ntSimple.positions = [];\nfunction simpleStart() {\n    // if we don't have dot-positions any more, refill the array\n    if (tSimple.positions.length == 0) {\n        tSimple.positions = shuffle([\n            {x: \"20%\", y: \"20%\"},\n            {x: \"50%\", y: \"20%\"},\n            {x: \"80%\", y: \"20%\"},\n            {x: \"20%\", y: \"50%\"},\n            {x: \"80%\", y: \"50%\"},\n            {x: \"20%\", y: \"80%\"},\n            {x: \"50%\", y: \"80%\"},\n            {x: \"80%\", y: \"80%\"}\n        ]);\n    }\n    var pos = tSimple.positions.pop();\n    $('#stimuli_dot').css({\n        'top': pos.y,\n        'left': pos.x\n    });\n    data_current.task = 'simple';\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = 'dot_' + pos.x + '_' + pos.y;\n\n    cam.recording = 1;\n    setTimeout('$(\"#stimuli_fixation\").hide(); status = \"fixation_offset\";', 1500);\n    setTimeout('simpleShowdot();', 2000);\n}\n\nfunction simpleShowdot() {\n    status = \"stimulus_onset\";\n    $(\"#stimuli_dot\").show();\n    setTimeout('status = \"stimulus_offset\"; endTrial();',  2000);\n}\n\n\n/************************************\n * POSNER VIEWING PARADIGM\n ************************************/\nfunction posnerStart() {\n    var p = Math.random() >= 0.5 ? '&gt;&gt;&gt;' : '&lt;&lt;&lt;';\n    $('#stimuli_prime').html(p);\n\n    var t = Math.random() >= 0.5 ? 'X' : 'N';\n    $('#stimuli_target').html(t);\n\n    var cond = Math.random() >= 0.7 ? 'incongruent' : 'congruent';\n\n    var tpos = 'left';\n    if ((cond == 'incongruent' && p == '&lt;&lt;&lt;') || ((cond == 'congruent' && p == '&gt;&gt;&gt;'))) {\n        tpos = 'right';\n    }\n\n    var pos = {};\n    if (tpos == 'left') {\n        pos.x = '20%';\n        pos.y = '30%';\n    } else {\n        pos.x = '80%';\n        pos.y = '30%';\n    }\n\n\n    $('#stimuli_target').css({\n        'top': pos.x,\n        'left': pos.y\n    });\n\n\n    data_current.task = 'posner';\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = 'posner_' + pos.x + '_' + pos.y + '_' + tpos;\n\n    cam.recording = 1;\n    setTimeout(\"$('#stimuli_fixation').hide();\", 1000);\n    setTimeout('posnerShowprime();', 1500);\n}\n\nfunction posnerShowprime() {\n    $('#stimuli_prime').show();\n    setTimeout(\"posnerShowTarget();\", 300);\n}\n\nfunction posnerShowTarget() {\n    $('#stimuli_prime').hide();\n    $('#stimuli_target').show();\n    setTimeout(\"endTrial();\", 1500);\n}\n\n\n/************************************\n * SMOOTH PURSUIT PARADIGM\n ************************************/\nvar tPursuit = {};\nfunction pursuitStart() {\n    $('#stimuli_fixation').hide();\n    var pos_possible = shuffle([\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"20%\"},\n        {x: \"20%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\n\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"20%\"},\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\n        {x: \"80%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\n\n        {x: \"20%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"80%\"},\n\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\n        {x: \"80%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"80%\"}\n    ]);\n    var pos = pos_possible[0];\n    $s = $('#stimuli_dot');\n    $s.css({\n        'top': pos.y,\n        'left': pos.x\n    });\n\n    $s.css({\n        'background-color': '#000'\n    });\n\n\n    data_current.task = 'pursuit';\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = 'pursuit_' + pos.x + '_' + pos.y + '_' + pos.tx + '_' + pos.ty;\n\n    cam.recording = 1;\n    $s.show();\n    setTimeout(function() {\n        status = \"pursuit_start\";\n        $('#stimuli_dot').css({\n            'background-color': '#dd494b'\n        }).animate({ \"left\": pos.tx, \"top\": pos.ty },\n            2000,\n            'linear',\n        function() {\n            status = \"pursuit_end\";\n            setTimeout(\"endTrial();\", 500);\n        });\n    }, 1500);\n}\n\n\n\n/************************************\n * FREE VIEWING PARADIGM\n ************************************/\nvar tFreeview = {};\n\n\ntFreeview.stimuli = [];\n\n\n\n$.get(freeview_image_file,function(result){\n  tFreeview.stimuli = Papa.parse(result,{\n    header:true,\n    skipEmptyLines:true\n  }).data;\n  \n  \n  if(trial_order == \"random\"){\n    tFreeview.stimuli = shuffle(tFreeview.stimuli);\n  }\n  \n  \n  if(left_side == \"random\"){\n    for(var i = 0; i < tFreeview.stimuli.length; i++){\n      [left_image,right_image] = shuffle([tFreeview.stimuli[i].image_1,\n                                          tFreeview.stimuli[i].image_2]);\n      tFreeview.stimuli[i].image_1 = left_image;\n      tFreeview.stimuli[i].image_2 = right_image;\n    }\n  } else if(left_side == \"equal\" | left_side == \"counterbalance\"){\n    // select indexes to swap left and right for half the indexes\n    // all indexes:\n    var indexes = Array.from({length:tFreeview.stimuli.length},(v,k)=>k);\n        indexes = shuffle(indexes);\n    \n    //assign the first half left to right\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){          //this will only loop through half of the randomised indexes\n      var this_index = indexes[i];\n      var right_image = tFreeview.stimuli[this_index].image_1;\n      var left_image = tFreeview.stimuli[this_index].image_2;\n      tFreeview.stimuli[this_index].image_1 = left_image;\n      tFreeview.stimuli[this_index].image_2 = right_image;\n    }\n  } else if(left_side == \"image_1\"){\n    // do nothing\n  } else if(left_side == \"image_2\"){\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){\n      var right_image = tFreeview.stimuli[i].image_1;\n      var left_image = tFreeview.stimuli[i].image_2;\n      tFreeview.stimuli[i].image_1 = left_image;\n      tFreeview.stimuli[i].image_2 = right_image;\n    }\n  } else {\n    alert(\"there's a problem in the 'left_side' column - fix this before testing.\");\n  }\n});\n\n\nfunction freeviewStart() {\n  \n  document.body.style.cursor = 'none';\n  \n  \n  image_pair = tFreeview.stimuli.shift();\n  \n  [left_image,right_image] = [image_pair.image_1,image_pair.image_2];\n  \n\n\n\n  \n  \n  $(\"#stimuli_img_left\").attr(\"src\",\"../User/\"+left_image);\n  $(\"#stimuli_img_right\").attr(\"src\",\"../User/\"+right_image)\n  /*\n  $(\"#stimuli_img_left\").css({\n    \"background-image\": \"url(../User/\"+img+\")\"\n    \n  })\n  */\n\n  data_current.task = 'freeviewing';\n  data_current.x = $('#stimuli_img_left').css('left');\n  data_current.y = \"0%\";\n  data_current.condition = 'view_' + left_image + '_' + right_image;\n\n\n  cam.recording = 1;\n  setTimeout(\"$('#stimuli_fixation').hide(); status = 'fixation_offset';\", 1000);\n  setTimeout(\"freeviewShow();\", 1500);\n  //../User/\n}\n\nfunction freeviewShow() {\n    status = 'stimulus_onset';\n    $('#stimuli_img_left').show();\n    $('#stimuli_img_right').show();\n    setTimeout(\"status = 'stimulus_offset'; endTrial();\", stim_duration);\n}\n\n\n\n/************************************\n * GENERATE AND SHOW HEATMAP\n ************************************/\nfunction heatmap() {\n    // preprocess data for heatmap\n    var bins = []; // create bins and fill them\n    for (var y = 0; y < window.innerHeight; y++) {\n        for (var x = 0; x < window.innerWidth; x++) {\n            bins.push([x, y, 0]);\n        }\n    }\n    // sort fixations into bins and get max\n    var max = 0;\n    for (var i = 0; i < data[data.length - 1].raw.length; i++) {\n        var d = data[data.length - 1].raw[i];\n        var dx = Math.round(d.x);\n        var dy = Math.round(d.y);\n        var pos = (dy * window.innerWidth) + dx;\n        if (pos <= bins.length && pos >= 0) {\n            bins[pos][2] += 1;\n            if (bins[pos][2] > max) {\n                max = bins[pos][2];\n            }\n        } else {\n            console.log('dropped ' + pos);\n        }\n    }\n\n    // remove empty bins\n    var binsc = [];\n    for (var i = 0; i < bins.length; i++) {\n        if (bins[i][2] != 0) {\n            binsc.push(bins[i]);\n        }\n    }\n\n    // create heatmap\n    $('body').append(\"<canvas id=\\\"heatmap\\\"></canvas>\");\n    $('#heatmap').attr('width', window.innerWidth);\n    $('#heatmap').attr('height', window.innerHeight);\n    heat = simpleheat('heatmap');\n    heat.resize();\n    heat.radius(30,50);\n    heat.max(max).data(binsc).draw();\n\n    $('#stimuli_img').show();\n}\n\n\n/**\n * navigation\n */\nvar page = 1;\nvar oldpage = -1;\nvar d_consent = undefined;\nfunction navigation(direction) {\n  $('#message').hide();\n\n  $('#instruction_continue_text').html(\"&gt;\");\n\n\n  \n\tif (page == 2 && direction == 'continue') {\n    if (cam.initialized == 1) {\n      $('#instruction').fadeOut(1000);\n      setTimeout(\"prepareBlock();\", 2000);\n    }\n  } else if (page == 2 && direction == 'pause') {\n    $('#instruction_continue').html(\"continue\").css({'font-size': '1.7em'});\n    $('#instruction_2').find(\"h1\").html('short pause (block ' + block_no + ' of ' + design.blocks.length + \")\");\n    $('#setup_first').hide();\n    $('#setup_after').show();\n\n    $('#instruction').show(function() {\n      if (block_no == design.blocks.length) {\n        page++;\n      } else {\n        $('#instruction_2').fadeIn(300);\n        $('#webgazerVideoFeed').show();\n      }\n    });\n  } else if  (direction == 'continue') {\n    page++;\n  } else if (direction == 'back') {\n    page--;\n  }\n  page = page < 1 ? 1 : page;\n  page = page > $('.instruction_page').length ? $('.instruction_page').length : page;\n  page <= 1 ? $('#instruction_back').hide() : $('#instruction_back').show();\n  page >= $('.instruction_page').length ? $('#instruction_continue').hide() : $('#instruction_continue').show();\n  page >= 3 ? $('#instruction_back,#instruction_continue').hide() : \"\";\n  block_no > 0 ? $('#instruction_back').hide() : \"\";\n\n  if (oldpage != page) { // if we stay at the same page, we avoid unnecessary animations\n    $('.instruction_page').hide();\n    $('#instruction_'+page).fadeIn(300);\n  }\n  // start up webcam\n  if (page == 2 && cam.initialized == 0) {\n      loadWebgazer();\n  }\n  oldpage = page;\n}\n\n\nvar cl;\nvar t_start = new Date().getTime();\n$('document').ready(function() {\n  $('#stimulus').hide();\n  $('#calibration_dot').hide();\n  $('#setup_after').hide();\n  $('#instruction_message').hide();\n  $('#therest').hide();\n\n\n  $('#start_button').click(function() {\n    $(this).hide();\n    prepareBlock();\n  });\n\n  $('body').keypress(function(e) {\n    //e.preventDefault();\n    switch(e.keyCode) {\n\n    }\n  });\n\n  $('#instruction_continue').click(function() {\n      navigation('continue');\n  });\n\n  $('#instruction_back').click(function() {\n      navigation('back');\n  });\n\n  $( \"#f_crowdflowerid\" ).tooltip({\n    show: {\n      effect: \"slideDown\",\n      delay: 250\n    }\n  });\n\n\n  /*\n  $('#f_birthday').datepicker({\n      dateFormat: 'yy/mm/dd',\n      changeYear: true,\n      changeMonth: true,\n      yearRange: \"-100:+0\"\n  });\n  */\n  var select = $('#f_birthday');\n  for (var i=18;i <= 100; i++){\n    select.append('<option value=\"'+i+'\">'+i+'</option>')\n  }\n\n  window.localStorage.clear();\n    \n  var ss = window.location.hash.substring(1);\n  $('#cf_reference,#asd_reference,#rub_reference,#cf_code').hide();\n  if (ss == \"cf\") { // crowdflower-reference\n    $('#cf_reference,#cf_code').show();\n  } else if (ss == \"rub\") {\n    $('#rub_reference').show();\n\t} else {\t\t\n    $('#asd_reference').show();\n\t}\n\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n  var is_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  if (is_chrome || is_firefox) {\n      page = 0;\n      navigation('start');\n  } else {\n      $('#instruction').hide();\n      $('#message').html('Thank you very much for your interest in our study.<br /><br />Unfortunately, your browser is not supported by our website. To participate, you need either the browser \"Google Chrome\" or \"Firefox\".<br /><br />Do download one of these securely and free of charge, please follow one of these links: <a href=\"https://www.google.com/chrome/browser/desktop/\" target=\"_blank\">Google Chrome</a> or <a href=\"https://www.mozilla.org/de/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>').show();\n  }\n});\n\n\n/**\n function drawLoop() {\n    requestAnimFrame(drawLoop);\n    var p = webgazer.getCurrentPrediction();\n    if (p !== null) {\n        console.log(p);\n        $('body').append('<span class=\"p\" style=\"top: '+p.y+'px; left: '+p.x+'px\"></span>');\n        measurements++;\n    }\n    t = (new Date().getTime() - start)/1000;\n    cam.overlay.getContext('2d').clearRect(0,0,cam.width,cam.height);\n    if (cl.getCurrentPosition()) {\n        //console.log(cl.getCurrentPosition()[0]);\n        //cl.draw(overlay);\n    }\n}\n */\n\n\n\n\n\n\nwindow.onbeforeunload = function() {\n  //webgazer.end(); //Uncomment if you want to save the data even if you reload the page.\n}\n</script>\n"}, "python_procs": {"procedure_1.csv": "Item,Trial Type,Max Time,Text,Shuffle 1,\r\n0,instruct,user,\"If you have been drinking alcohol, taking recreational drugs or gambled within the last 24 hours, please wait until it's been 24 hours since you last partook in any of these activities before proceeding. Don't worry about restarting the experiment, you can close the window and resume from here or restart from scratch when you're ready.\",off,\r\n2,webgazer,user,\"Please look at the cross.<br />A pair of images will follow. You are free <br />to look at either image.<br /><br />Do not move your head, <br />only use your eyes.\",trials,\r\n0,instruct,user,https://forms.office.com/Pages/ResponsePage.aspx?id=xDv6T_zswEiQgPXkP_kOX4iwBGRO5-NFl2OBto3gpIBUQzlWSUtMT1cyNFJXQVUyM0VVQ1pBWU0zWS4u,off,\r\n0,instruct,user,\"we're no longer including Rutgers alcohol problem index, right?\",off,\r\n0,instruct,user,are we including gambling problem index?,off,\r\n0,instruct,user,\"IUC will be done with microsoft forms, right?\",off,\r\n0,instruct,user,\"demographics will be done with microsoft forms, right?\",off,\r\n,,,,,"}, "python_conditions": "Name,Notes,Stimuli,Procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,random,,,5,\r\n,,,,,,,,,,", "python_stims": {"stimuli_1.csv": "calibrations,freeview_image_file,design_type,calibration_skip,image_height,image_width,save_script,stim_duration,trials,left_side,trial_order,left_position,right_position,min_width,min_height,skip_instruct,\r\n13,freeviewing/freeview_stimuli.csv,freeview,skip,300px,400px,https://script.google.com/macros/s/AKfycbzwj1yzprDALwIAP0LFwFD-LeBEb3e9w28YVKj4veWavrjsu55n/exec,2000,20,image_2,random,-231px,231px,1000px,600px,on,\r\n,,,,,,,,,,,,,,,,"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "stimuli_1.csv", "procedure": "procedure_1.csv", "fullscreen": "off", "welcome": "", "participant_id": "random", "end_message": "", "start_message": "", "buffer": "5", "": ""}]}